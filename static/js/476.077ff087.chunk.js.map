{"version":3,"file":"static/js/476.077ff087.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contactsSlice/contactsSelectors.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts.module.css?8552","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"label\":\"ContactForm_label__-cVXI\",\"button-30\":\"ContactForm_button-30__JtAye\"};","export const getContacts = state => state.contacts.contacts.items;\nexport const getIsContacts = state => getContacts(state).length > 0;\nexport const getContactsFilter = state => state.contacts.filter;\n","import s from './ContactForm.module.css';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contactsSlice/contactsSelectors';\nimport { addContact } from 'redux/contactsSlice/operations';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    contacts.some(\n      contact =>\n        contact.name.trim().toLowerCase() === name.trim().toLowerCase() ||\n        contact.number === number\n    )\n      ? alert(`name: ${name}  or number: ${number} is already in contacts `)\n      : dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor=\"name\">\n        Name\n        <input\n          placeholder=\"Name\"\n          className={s.input}\n          onChange={e => setName(e.target.value)}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n        />\n      </label>\n      <label className={s.label} htmlFor=\"number\">\n        Number\n        <input\n          placeholder=\"Number\"\n          className={s.input}\n          onChange={e => setNumber(e.target.value)}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n        />\n      </label>\n\n      <button className={s['button-30']} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"li\":\"ContactList_li__dzNT+\",\"button-30\":\"ContactList_button-30__gZdWs\"};","import s from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getContacts,\n  getContactsFilter,\n} from '../../redux/contactsSlice/contactsSelectors';\nimport { removeContact } from 'redux/contactsSlice/operations';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getContactsFilter);\n  const contacts = useSelector(getContacts);\n  const filterContact = () => {\n    const filterName = filter?.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filterName)\n    );\n  };\n  const filterContactList = filterContact();\n  return (\n    <ul className={s.ul}>\n      {filterContactList.map(({ name, number, id }) => {\n        return (\n          <li className={s.li} key={id}>\n            {name}: {number}\n            <button\n              className={s['button-30']}\n              type=\"button\"\n              onClick={() => {\n                dispatch(removeContact(id));\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\"};","import { filterContact } from '../../redux/contactsSlice/contactsSlice';\nimport { getContactsFilter } from '../../redux/contactsSlice/contactsSelectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport s from './Filter.module.css';\nconst Filter = () => {\n  const filter = useSelector(getContactsFilter);\n  const dispatch = useDispatch();\n  return (\n    <input\n      className={s.input}\n      placeholder=\"Find a contact\"\n      onChange={e => dispatch(filterContact(e.currentTarget.value))}\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n    />\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Contacts_box__j5UmY\",\"text\":\"Contacts_text__LjyDq\"};","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getToken } from 'redux/auth/authSelector';\nimport { getIsContacts } from 'redux/contactsSlice/contactsSelectors';\nimport { fetchContact } from 'redux/contactsSlice/operations';\nimport s from './Contacts.module.css';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  const contatsList = useSelector(getIsContacts);\n  const token = useSelector(getToken);\n\n  useEffect(() => {\n    token && dispatch(fetchContact());\n  }, [dispatch, token]);\n\n  return (\n    token && (\n      <div className={s.box}>\n        <h2 className={s.text}>Phonebook</h2>\n        <ContactForm />\n        {contatsList && <h2 className={s.text}>Contacts</h2>}\n        {contatsList && <Filter />}\n        {contatsList && <ContactList />}\n      </div>\n    )\n  );\n};\nexport default Contacts;\n"],"names":["getContacts","state","contacts","items","getIsContacts","length","getContactsFilter","filter","dispatch","useDispatch","useSelector","useState","name","setName","number","setNumber","reset","className","s","onSubmit","e","preventDefault","some","contact","trim","toLowerCase","alert","addContact","htmlFor","placeholder","onChange","target","value","type","pattern","title","required","filterContactList","filterName","includes","filterContact","map","id","onClick","removeContact","currentTarget","contatsList","token","getToken","useEffect","fetchContact"],"sourceRoot":""}